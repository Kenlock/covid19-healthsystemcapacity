name: HSCAP Data Update

# This workflow is triggered on a cron schedule based on the develop branch's
# version of the workflow. This is what performs the automatic updates.
# We also have this triggered by pushes to the branch feature/automatic-data-update,
# so that as we develop changes to the data update workflow we can push to that
# branch and see it in action.
on:
  push:
    branches:
      - feature/automatic-data-update
  schedule:
    - cron: "30 2,14-22/4 * * *"

jobs:
  publish_hscap:
    name: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Checkout master
        uses: actions/checkout@v2
        with:
          ref: master
          path: 'clone_dir'

      - name: Update data
        uses: ./.github/actions/update-data
        with:
          update_root: /github/workspace/clone_dir/
          dataset: 'HSCAP'
          airtable_key: ${{ secrets.AIRTABLE_KEY }}

      - name: Commit any data changes
        id: commit_changes
        run: |
          ./.github/actions/scripts/commit-data-update-changes.sh clone_dir data/update-hscap

      - name: Push data update to repository
        uses: ad-m/github-push-action@v0.5.0
        if: steps.commit_changes.outputs.status == 'CHANGED'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: data/update-hscap
          directory: clone_dir
          force: true

      - name: Install JS Actions dependencies
        if: steps.commit_changes.outputs.status == 'CHANGED' || steps.commit_changes.outputs.status == 'CHANGES_ALREADY_PUSHED'
        run: |
          cd ./.github/actions/data-update-pr && npm ci

      - name: Data Update Pull Request
        if: steps.commit_changes.outputs.status == 'CHANGED' || steps.commit_changes.outputs.status == 'CHANGES_ALREADY_PUSHED'
        uses: ./.github/actions/data-update-pr
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "HSCAP data update via GitHub Action"
          dataUpdateBranch: data/update-hscap
          makeComment: ${{ steps.commit_changes.outputs.status == 'CHANGED' }}
